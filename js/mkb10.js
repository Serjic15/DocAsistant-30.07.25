/**
 * CardioAssistant Pro - MKB-10 (ICD-10) Module
 * –ú–æ–¥—É–ª—å –ú–ö–ë-10 –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ (–ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô)
 */

class MKB10Manager {
    constructor() {
        this.icdData = [];
        this.filteredData = [];
        this.currentDiagnosisField = null;
        this.isInitialized = false;
        this.searchTimeout = null;
    }

    init() {
        console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ú–ö–ë-10 –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞...');
        this.loadICD10Data();
        this.setupEventListeners();
        console.log('‚úÖ –ú–ö–ë-10 –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        this.isInitialized = true;
    }

    loadICD10Data() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω—ã –ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞ mkb10-data.js
        if (typeof window.ICD10_DATA !== 'undefined' && Array.isArray(window.ICD10_DATA) && window.ICD10_DATA.length > 0) {
            this.icdData = window.ICD10_DATA;
            console.log(`‚úÖ –ú–ö–ë-10 –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã: ${this.icdData.length} –¥–∏–∞–≥–Ω–æ–∑–æ–≤`);
        } else {
            console.warn('‚ö†Ô∏è –§–∞–π–ª mkb10-data.js –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ');
            this.loadFallbackData();
        }
        
        this.filteredData = [...this.icdData];
        this.displayICD10Items(this.filteredData);
    }

    loadFallbackData() {
        // –ë–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä –∫–∞—Ä–¥–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –¥–∏–∞–≥–Ω–æ–∑–æ–≤
        this.icdData = [
            // –ê—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –≥–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏—è
            { code: "I10", name: "–≠—Å—Å–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è (–ø–µ—Ä–≤–∏—á–Ω–∞—è) –≥–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏—è" },
            { code: "I11", name: "–ì–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏–≤–Ω–∞—è –±–æ–ª–µ–∑–Ω—å —Å–µ—Ä–¥—Ü–∞ [–≥–∏–ø–µ—Ä—Ç–æ–Ω–∏—á–µ—Å–∫–∞—è –±–æ–ª–µ–∑–Ω—å —Å–µ—Ä–¥—Ü–∞ —Å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–æ—Ä–∞–∂–µ–Ω–∏–µ–º —Å–µ—Ä–¥—Ü–∞]" },
            { code: "I11.0", name: "–ì–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏–≤–Ω–∞—è –±–æ–ª–µ–∑–Ω—å —Å–µ—Ä–¥—Ü–∞ —Å (–∑–∞—Å—Ç–æ–π–Ω–æ–π) —Å–µ—Ä–¥–µ—á–Ω–æ–π –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å—é" },
            { code: "I11.9", name: "–ì–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏–≤–Ω–∞—è –±–æ–ª–µ–∑–Ω—å —Å–µ—Ä–¥—Ü–∞ –±–µ–∑ (–∑–∞—Å—Ç–æ–π–Ω–æ–π) —Å–µ—Ä–¥–µ—á–Ω–æ–π –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏" },
            { code: "I12", name: "–ì–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏–≤–Ω–∞—è [–≥–∏–ø–µ—Ä—Ç–æ–Ω–∏—á–µ—Å–∫–∞—è] –±–æ–ª–µ–∑–Ω—å —Å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–æ—Ä–∞–∂–µ–Ω–∏–µ–º –ø–æ—á–µ–∫" },
            { code: "I13", name: "–ì–∏–ø–µ—Ä—Ç–µ–Ω–∑–∏–≤–Ω–∞—è [–≥–∏–ø–µ—Ä—Ç–æ–Ω–∏—á–µ—Å–∫–∞—è] –±–æ–ª–µ–∑–Ω—å —Å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –ø–æ—Ä–∞–∂–µ–Ω–∏–µ–º —Å–µ—Ä–¥—Ü–∞ –∏ –ø–æ—á–µ–∫" },
            
            // –ò–ë–° –∏ —Å—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è
            { code: "I20", name: "–°—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è [–≥—Ä—É–¥–Ω–∞—è –∂–∞–±–∞]" },
            { code: "I20.0", name: "–ù–µ—Å—Ç–∞–±–∏–ª—å–Ω–∞—è —Å—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è" },
            { code: "I20.1", name: "–°—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è —Å –¥–æ–∫—É–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Å–ø–∞–∑–º–æ–º" },
            { code: "I20.8", name: "–î—Ä—É–≥–∏–µ —Ñ–æ—Ä–º—ã —Å—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏–∏" },
            { code: "I20.9", name: "–°—Ç–µ–Ω–æ–∫–∞—Ä–¥–∏—è –Ω–µ—É—Ç–æ—á–Ω–µ–Ω–Ω–∞—è" },
            
            // –ò–Ω—Ñ–∞—Ä–∫—Ç –º–∏–æ–∫–∞—Ä–¥–∞
            { code: "I21", name: "–û—Å—Ç—Ä—ã–π –∏–Ω—Ñ–∞—Ä–∫—Ç –º–∏–æ–∫–∞—Ä–¥–∞" },
            { code: "I21.0", name: "–û—Å—Ç—Ä—ã–π —Ç—Ä–∞–Ω—Å–º—É—Ä–∞–ª—å–Ω—ã–π –∏–Ω—Ñ–∞—Ä–∫—Ç –ø–µ—Ä–µ–¥–Ω–µ–π —Å—Ç–µ–Ω–∫–∏ –º–∏–æ–∫–∞—Ä–¥–∞" },
            { code: "I21.1", name: "–û—Å—Ç—Ä—ã–π —Ç—Ä–∞–Ω—Å–º—É—Ä–∞–ª—å–Ω—ã–π –∏–Ω—Ñ–∞—Ä–∫—Ç –Ω–∏–∂–Ω–µ–π —Å—Ç–µ–Ω–∫–∏ –º–∏–æ–∫–∞—Ä–¥–∞" },
            { code: "I21.2", name: "–û—Å—Ç—Ä—ã–π —Ç—Ä–∞–Ω—Å–º—É—Ä–∞–ª—å–Ω—ã–π –∏–Ω—Ñ–∞—Ä–∫—Ç –º–∏–æ–∫–∞—Ä–¥–∞ –¥—Ä—É–≥–∏—Ö —É—Ç–æ—á–Ω–µ–Ω–Ω—ã—Ö –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–π" },
            { code: "I21.3", name: "–û—Å—Ç—Ä—ã–π —Ç—Ä–∞–Ω—Å–º—É—Ä–∞–ª—å–Ω—ã–π –∏–Ω—Ñ–∞—Ä–∫—Ç –º–∏–æ–∫–∞—Ä–¥–∞ –Ω–µ—É—Ç–æ—á–Ω–µ–Ω–Ω–æ–π –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏" },
            { code: "I21.4", name: "–û—Å—Ç—Ä—ã–π —Å—É–±—ç–Ω–¥–æ–∫–∞—Ä–¥–∏–∞–ª—å–Ω—ã–π –∏–Ω—Ñ–∞—Ä–∫—Ç –º–∏–æ–∫–∞—Ä–¥–∞" },
            { code: "I21.9", name: "–û—Å—Ç—Ä—ã–π –∏–Ω—Ñ–∞—Ä–∫—Ç –º–∏–æ–∫–∞—Ä–¥–∞ –Ω–µ—É—Ç–æ—á–Ω–µ–Ω–Ω—ã–π" },
            { code: "I22", name: "–ü–æ–≤—Ç–æ—Ä–Ω—ã–π –∏–Ω—Ñ–∞—Ä–∫—Ç –º–∏–æ–∫–∞—Ä–¥–∞" },
            
            // –•—Ä–æ–Ω–∏—á–µ—Å–∫–∞—è –ò–ë–°
            { code: "I25", name: "–•—Ä–æ–Ω–∏—á–µ—Å–∫–∞—è –∏—à–µ–º–∏—á–µ—Å–∫–∞—è –±–æ–ª–µ–∑–Ω—å —Å–µ—Ä–¥—Ü–∞" },
            { code: "I25.0", name: "–ê—Ç–µ—Ä–æ—Å–∫–ª–µ—Ä–æ—Ç–∏—á–µ—Å–∫–∞—è —Å–µ—Ä–¥–µ—á–Ω–æ-—Å–æ—Å—É–¥–∏—Å—Ç–∞—è –±–æ–ª–µ–∑–Ω—å, –æ–ø–∏—Å–∞–Ω–Ω–∞—è —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º" },
            { code: "I25.1", name: "–ê—Ç–µ—Ä–æ—Å–∫–ª–µ—Ä–æ—Ç–∏—á–µ—Å–∫–∞—è –±–æ–ª–µ–∑–Ω—å —Å–µ—Ä–¥—Ü–∞" },
            { code: "I25.2", name: "–ü–µ—Ä–µ–Ω–µ—Å–µ–Ω–Ω—ã–π –≤ –ø—Ä–æ—à–ª–æ–º –∏–Ω—Ñ–∞—Ä–∫—Ç –º–∏–æ–∫–∞—Ä–¥–∞" },
            { code: "I25.5", name: "–ò—à–µ–º–∏—á–µ—Å–∫–∞—è –∫–∞—Ä–¥–∏–æ–º–∏–æ–ø–∞—Ç–∏—è" },
            { code: "I25.9", name: "–•—Ä–æ–Ω–∏—á–µ—Å–∫–∞—è –∏—à–µ–º–∏—á–µ—Å–∫–∞—è –±–æ–ª–µ–∑–Ω—å —Å–µ—Ä–¥—Ü–∞ –Ω–µ—É—Ç–æ—á–Ω–µ–Ω–Ω–∞—è" },
            
            // –ù–∞—Ä—É—à–µ–Ω–∏—è —Ä–∏—Ç–º–∞
            { code: "I47", name: "–ü–∞—Ä–æ–∫—Å–∏–∑–º–∞–ª—å–Ω–∞—è —Ç–∞—Ö–∏–∫–∞—Ä–¥–∏—è" },
            { code: "I47.1", name: "–ù–∞–¥–∂–µ–ª—É–¥–æ—á–∫–æ–≤–∞—è —Ç–∞—Ö–∏–∫–∞—Ä–¥–∏—è" },
            { code: "I47.2", name: "–ñ–µ–ª—É–¥–æ—á–∫–æ–≤–∞—è —Ç–∞—Ö–∏–∫–∞—Ä–¥–∏—è" },
            { code: "I48", name: "–§–∏–±—Ä–∏–ª–ª—è—Ü–∏—è –∏ —Ç—Ä–µ–ø–µ—Ç–∞–Ω–∏–µ –ø—Ä–µ–¥—Å–µ—Ä–¥–∏–π" },
            { code: "I48.0", name: "–§–∏–±—Ä–∏–ª–ª—è—Ü–∏—è –ø—Ä–µ–¥—Å–µ—Ä–¥–∏–π" },
            { code: "I48.1", name: "–¢—Ä–µ–ø–µ—Ç–∞–Ω–∏–µ –ø—Ä–µ–¥—Å–µ—Ä–¥–∏–π" },
            { code: "I49", name: "–î—Ä—É–≥–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è —Å–µ—Ä–¥–µ—á–Ω–æ–≥–æ —Ä–∏—Ç–º–∞" },
            { code: "I49.0", name: "–§–∏–±—Ä–∏–ª–ª—è—Ü–∏—è –∏ —Ç—Ä–µ–ø–µ—Ç–∞–Ω–∏–µ –∂–µ–ª—É–¥–æ—á–∫–æ–≤" },
            { code: "I49.3", name: "–ü—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–µ–ø–æ–ª—è—Ä–∏–∑–∞—Ü–∏—è –∂–µ–ª—É–¥–æ—á–∫–æ–≤" },
            { code: "I49.4", name: "–î—Ä—É–≥–∞—è –∏ –Ω–µ—É—Ç–æ—á–Ω–µ–Ω–Ω–∞—è –ø—Ä–µ–∂–¥–µ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –¥–µ–ø–æ–ª—è—Ä–∏–∑–∞—Ü–∏—è" },
            { code: "I49.5", name: "–°–∏–Ω–¥—Ä–æ–º —Å–ª–∞–±–æ—Å—Ç–∏ —Å–∏–Ω—É—Å–æ–≤–æ–≥–æ —É–∑–ª–∞" },
            
            // –ë–ª–æ–∫–∞–¥—ã
            { code: "I44", name: "–ü—Ä–µ–¥—Å–µ—Ä–¥–Ω–æ-–∂–µ–ª—É–¥–æ—á–∫–æ–≤–∞—è –±–ª–æ–∫–∞–¥–∞ –∏ –±–ª–æ–∫–∞–¥–∞ –ª–µ–≤–æ–π –Ω–æ–∂–∫–∏ –ø—É—á–∫–∞ [–ì–∏—Å–∞]" },
            { code: "I44.0", name: "–ü—Ä–µ–¥—Å–µ—Ä–¥–Ω–æ-–∂–µ–ª—É–¥–æ—á–∫–æ–≤–∞—è –±–ª–æ–∫–∞–¥–∞ –ø–µ—Ä–≤–æ–π —Å—Ç–µ–ø–µ–Ω–∏" },
            { code: "I44.1", name: "–ü—Ä–µ–¥—Å–µ—Ä–¥–Ω–æ-–∂–µ–ª—É–¥–æ—á–∫–æ–≤–∞—è –±–ª–æ–∫–∞–¥–∞ –≤—Ç–æ—Ä–æ–π —Å—Ç–µ–ø–µ–Ω–∏" },
            { code: "I44.2", name: "–ü—Ä–µ–¥—Å–µ—Ä–¥–Ω–æ-–∂–µ–ª—É–¥–æ—á–∫–æ–≤–∞—è –±–ª–æ–∫–∞–¥–∞ –ø–æ–ª–Ω–∞—è" },
            { code: "I44.3", name: "–î—Ä—É–≥–∞—è –∏ –Ω–µ—É—Ç–æ—á–Ω–µ–Ω–Ω–∞—è –ø—Ä–µ–¥—Å–µ—Ä–¥–Ω–æ-–∂–µ–ª—É–¥–æ—á–∫–æ–≤–∞—è –±–ª–æ–∫–∞–¥–∞" },
            { code: "I44.4", name: "–ë–ª–æ–∫–∞–¥–∞ –ø–µ—Ä–µ–¥–Ω–µ-–ª–µ–≤–æ–π –≤–µ—Ç–≤–∏" },
            { code: "I44.5", name: "–ë–ª–æ–∫–∞–¥–∞ –∑–∞–¥–Ω–µ-–ª–µ–≤–æ–π –≤–µ—Ç–≤–∏" },
            { code: "I44.7", name: "–ë–ª–æ–∫–∞–¥–∞ –ª–µ–≤–æ–π –Ω–æ–∂–∫–∏ –ø—É—á–∫–∞ –Ω–µ—É—Ç–æ—á–Ω–µ–Ω–Ω–∞—è" },
            { code: "I45", name: "–î—Ä—É–≥–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –ø—Ä–æ–≤–æ–¥–∏–º–æ—Å—Ç–∏" },
            { code: "I45.0", name: "–ë–ª–æ–∫–∞–¥–∞ –ø—Ä–∞–≤–æ–π –Ω–æ–∂–∫–∏ –ø—É—á–∫–∞" },
            
            // –°–µ—Ä–¥–µ—á–Ω–∞—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å
            { code: "I50", name: "–°–µ—Ä–¥–µ—á–Ω–∞—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å" },
            { code: "I50.0", name: "–ó–∞—Å—Ç–æ–π–Ω–∞—è —Å–µ—Ä–¥–µ—á–Ω–∞—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å" },
            { code: "I50.1", name: "–õ–µ–≤–æ–∂–µ–ª—É–¥–æ—á–∫–æ–≤–∞—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å" },
            { code: "I50.9", name: "–°–µ—Ä–¥–µ—á–Ω–∞—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å –Ω–µ—É—Ç–æ—á–Ω–µ–Ω–Ω–∞—è" },
            
            // –ö–∞—Ä–¥–∏–æ–º–∏–æ–ø–∞—Ç–∏–∏
            { code: "I42", name: "–ö–∞—Ä–¥–∏–æ–º–∏–æ–ø–∞—Ç–∏—è" },
            { code: "I42.0", name: "–î–∏–ª–∞—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä–¥–∏–æ–º–∏–æ–ø–∞—Ç–∏—è" },
            { code: "I42.1", name: "–û–±—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–∞—è –≥–∏–ø–µ—Ä—Ç—Ä–æ—Ñ–∏—á–µ—Å–∫–∞—è –∫–∞—Ä–¥–∏–æ–º–∏–æ–ø–∞—Ç–∏—è" },
            { code: "I42.2", name: "–î—Ä—É–≥–∞—è –≥–∏–ø–µ—Ä—Ç—Ä–æ—Ñ–∏—á–µ—Å–∫–∞—è –∫–∞—Ä–¥–∏–æ–º–∏–æ–ø–∞—Ç–∏—è" },
            { code: "I42.5", name: "–î—Ä—É–≥–∞—è —Ä–µ—Å—Ç—Ä–∏–∫—Ç–∏–≤–Ω–∞—è –∫–∞—Ä–¥–∏–æ–º–∏–æ–ø–∞—Ç–∏—è" },
            { code: "I42.9", name: "–ö–∞—Ä–¥–∏–æ–º–∏–æ–ø–∞—Ç–∏—è –Ω–µ—É—Ç–æ—á–Ω–µ–Ω–Ω–∞—è" },
            
            // –ë–æ–ª–µ–∑–Ω–∏ –∫–ª–∞–ø–∞–Ω–æ–≤
            { code: "I34", name: "–ù–µ—Ä–µ–≤–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ—Ä–∞–∂–µ–Ω–∏—è –º–∏—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –∫–ª–∞–ø–∞–Ω–∞" },
            { code: "I34.0", name: "–ú–∏—Ç—Ä–∞–ª—å–Ω–∞—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å" },
            { code: "I34.1", name: "–ü—Ä–æ–ª–∞–ø—Å –º–∏—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –∫–ª–∞–ø–∞–Ω–∞" },
            { code: "I34.2", name: "–ù–µ—Ä–µ–≤–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å—Ç–µ–Ω–æ–∑ –º–∏—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –∫–ª–∞–ø–∞–Ω–∞" },
            { code: "I35", name: "–ù–µ—Ä–µ–≤–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ—Ä–∞–∂–µ–Ω–∏—è –∞–æ—Ä—Ç–∞–ª—å–Ω–æ–≥–æ –∫–ª–∞–ø–∞–Ω–∞" },
            { code: "I35.0", name: "–ê–æ—Ä—Ç–∞–ª—å–Ω—ã–π —Å—Ç–µ–Ω–æ–∑" },
            { code: "I35.1", name: "–ê–æ—Ä—Ç–∞–ª—å–Ω–∞—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç—å" },
            { code: "I36", name: "–ù–µ—Ä–µ–≤–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ—Ä–∞–∂–µ–Ω–∏—è —Ç—Ä–µ—Ö—Å—Ç–≤–æ—Ä—á–∞—Ç–æ–≥–æ –∫–ª–∞–ø–∞–Ω–∞" },
            { code: "I37", name: "–ü–æ—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∞–ø–∞–Ω–∞ –ª–µ–≥–æ—á–Ω–æ–π –∞—Ä—Ç–µ—Ä–∏–∏" },
            
            // –î–∏—Å–ª–∏–ø–∏–¥–µ–º–∏–∏
            { code: "E78", name: "–ù–∞—Ä—É—à–µ–Ω–∏—è –æ–±–º–µ–Ω–∞ –ª–∏–ø–æ–ø—Ä–æ—Ç–µ–∏–Ω–æ–≤ –∏ –¥—Ä—É–≥–∏–µ –ª–∏–ø–∏–¥–µ–º–∏–∏" },
            { code: "E78.0", name: "–ß–∏—Å—Ç–∞—è –≥–∏–ø–µ—Ä—Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω–µ–º–∏—è" },
            { code: "E78.1", name: "–ß–∏—Å—Ç–∞—è –≥–∏–ø–µ—Ä–≥–ª–∏—Ü–µ—Ä–∏–¥–µ–º–∏—è" },
            { code: "E78.2", name: "–°–º–µ—à–∞–Ω–Ω–∞—è –≥–∏–ø–µ—Ä–ª–∏–ø–∏–¥–µ–º–∏—è" },
            { code: "E78.3", name: "–ì–∏–ø–µ—Ä—Ö–∏–ª–∏–º–∏–∫—Ä–æ–Ω–µ–º–∏—è" },
            { code: "E78.4", name: "–î—Ä—É–≥–∏–µ –≥–∏–ø–µ—Ä–ª–∏–ø–∏–¥–µ–º–∏–∏" },
            { code: "E78.5", name: "–ì–∏–ø–µ—Ä–ª–∏–ø–∏–¥–µ–º–∏—è –Ω–µ—É—Ç–æ—á–Ω–µ–Ω–Ω–∞—è" },
            
            // –°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç
            { code: "E10", name: "–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç 1 —Ç–∏–ø–∞" },
            { code: "E11", name: "–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç 2 —Ç–∏–ø–∞" },
            { code: "E11.7", name: "–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç 2 —Ç–∏–ø–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –æ—Å–ª–æ–∂–Ω–µ–Ω–∏—è–º–∏" },
            { code: "E11.9", name: "–°–∞—Ö–∞—Ä–Ω—ã–π –¥–∏–∞–±–µ—Ç 2 —Ç–∏–ø–∞ –±–µ–∑ –æ—Å–ª–æ–∂–Ω–µ–Ω–∏–π" },
            
            // –¢—Ä–æ–º–±–æ—ç–º–±–æ–ª–∏–∏
            { code: "I26", name: "–õ–µ–≥–æ—á–Ω–∞—è —ç–º–±–æ–ª–∏—è" },
            { code: "I26.0", name: "–õ–µ–≥–æ—á–Ω–∞—è —ç–º–±–æ–ª–∏—è —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –æ–± –æ—Å—Ç—Ä–æ–º –ª–µ–≥–æ—á–Ω–æ–º —Å–µ—Ä–¥—Ü–µ" },
            { code: "I26.9", name: "–õ–µ–≥–æ—á–Ω–∞—è —ç–º–±–æ–ª–∏—è –±–µ–∑ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ–± –æ—Å—Ç—Ä–æ–º –ª–µ–≥–æ—á–Ω–æ–º —Å–µ—Ä–¥—Ü–µ" },
            { code: "I74", name: "–≠–º–±–æ–ª–∏—è –∏ —Ç—Ä–æ–º–±–æ–∑ –∞—Ä—Ç–µ—Ä–∏–π" },
            
            // –î—Ä—É–≥–∏–µ –≤–∞–∂–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            { code: "R06.0", name: "–û–¥—ã—à–∫–∞" },
            { code: "R50", name: "–õ–∏—Ö–æ—Ä–∞–¥–∫–∞ –Ω–µ—É—Ç–æ—á–Ω–µ–Ω–Ω–∞—è" },
            { code: "R06.2", name: "–°–≤–∏—Å—Ç—è—â–µ–µ –¥—ã—Ö–∞–Ω–∏–µ" },
            { code: "Z95.1", name: "–ù–∞–ª–∏—á–∏–µ –∞–æ—Ä—Ç–æ–∫–æ—Ä–æ–Ω–∞—Ä–Ω–æ–≥–æ —à—É–Ω—Ç–∞" },
            { code: "Z95.5", name: "–ù–∞–ª–∏—á–∏–µ –∏–º–ø–ª–∞–Ω—Ç–∞—Ç–∞ –∏ —Ç—Ä–∞–Ω—Å–ø–ª–∞–Ω—Ç–∞—Ç–∞ —Å–µ—Ä–¥–µ—á–Ω–æ–≥–æ –∫–ª–∞–ø–∞–Ω–∞" }
        ];
        
        utils.showNotification('–ú–ö–ë-10: –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ. –î–ª—è –ø–æ–ª–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –¥–æ–±–∞–≤—å—Ç–µ —Ñ–∞–π–ª mkb10-data.js', 'warning');
    }

    setupEventListeners() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ —Å –¥–µ–±–∞—É–Ω—Å–æ–º
        const searchInput = document.getElementById('icdSearch');
        if (searchInput) {
            searchInput.addEventListener('input', (e) => {
                clearTimeout(this.searchTimeout);
                this.searchTimeout = setTimeout(() => {
                    this.search(e.target.value);
                }, 300); // –ó–∞–¥–µ—Ä–∂–∫–∞ 300–º—Å –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
            });
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && this.isClassifierVisible()) {
                this.closeClassifier();
            }
        });

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞
        document.addEventListener('click', (e) => {
            if (!e.target.closest('.icd-classifier') && 
                !e.target.closest('textarea[ondblclick*="showClassifier"]') && 
                this.isClassifierVisible()) {
                this.closeClassifier();
            }
        });
    }

    showClassifier(field) {
        if (!this.isInitialized) {
            this.init();
        }

        this.currentDiagnosisField = field;
        const classifier = document.getElementById('icdClassifier');
        
        if (!classifier) {
            console.error('–≠–ª–µ–º–µ–Ω—Ç icdClassifier –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }

        classifier.classList.add('active');
        
        // –û—á–∏—â–∞–µ–º –ø–æ–∏—Å–∫ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        const searchInput = document.getElementById('icdSearch');
        if (searchInput) {
            searchInput.value = '';
            searchInput.focus();
        }
        
        this.displayICD10Items(this.icdData);
        
        utils.log('–ú–ö–ë-10 –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –æ—Ç–∫—Ä—ã—Ç', 'info');
    }

    closeClassifier() {
        const classifier = document.getElementById('icdClassifier');
        if (classifier) {
            classifier.classList.remove('active');
        }
        
        this.currentDiagnosisField = null;
        utils.log('–ú–ö–ë-10 –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫—Ä—ã—Ç', 'info');
    }

    isClassifierVisible() {
        const classifier = document.getElementById('icdClassifier');
        return classifier && classifier.classList.contains('active');
    }

    search(searchTerm = '') {
        if (!searchTerm || searchTerm.trim() === '') {
            this.filteredData = [...this.icdData];
        } else {
            const term = searchTerm.toLowerCase().trim();
            this.filteredData = this.icdData.filter(item => 
                item.code.toLowerCase().includes(term) || 
                item.name.toLowerCase().includes(term)
            );
        }
        
        this.displayICD10Items(this.filteredData);
    }

    displayICD10Items(items) {
        const icdList = document.getElementById('icdList');
        if (!icdList) {
            console.error('–≠–ª–µ–º–µ–Ω—Ç icdList –Ω–µ –Ω–∞–π–¥–µ–Ω');
            return;
        }
        
        if (items.length === 0) {
            icdList.innerHTML = `
                <div class="text-center text-muted p-4">
                    <i class="fas fa-search fa-2x mb-2"></i>
                    <div>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>
                    <small>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å</small>
                </div>
            `;
            return;
        }
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        const displayItems = items.slice(0, 100);
        
        icdList.innerHTML = displayItems.map(item => `
            <div class="icd-item" onclick="mkb10Manager.selectICD10('${this.escapeHtml(item.code)}', '${this.escapeHtml(item.name)}')">
                <div class="icd-code">${this.highlightSearchTerm(item.code)}</div>
                <div class="icd-description">${this.highlightSearchTerm(item.name)}</div>
            </div>
        `).join('');
        
        if (items.length > 100) {
            icdList.innerHTML += `
                <div class="text-center text-muted p-3">
                    <small>–ü–æ–∫–∞–∑–∞–Ω–æ –ø–µ—Ä–≤—ã–µ 100 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–∑ ${items.length}. –£—Ç–æ—á–Ω–∏—Ç–µ –ø–æ–∏—Å–∫ –¥–ª—è –ª—É—á—à–∏—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.</small>
                </div>
            `;
        }
    }

    highlightSearchTerm(text) {
        const searchInput = document.getElementById('icdSearch');
        if (!searchInput || !searchInput.value) return this.escapeHtml(text);
        
        const searchTerm = this.escapeHtml(searchInput.value.trim());
        if (!searchTerm) return this.escapeHtml(text);
        
        const escapedText = this.escapeHtml(text);
        const regex = new RegExp(`(${this.escapeRegExp(searchTerm)})`, 'gi');
        
        return escapedText.replace(regex, '<mark>$1</mark>');
    }

    selectICD10(code, name) {
        if (!this.currentDiagnosisField) {
            utils.showErrorMessage('–û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω–æ –ø–æ–ª–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ–∑–∞');
            return;
        }

        try {
            const currentText = this.currentDiagnosisField.value || '';
            const newText = `${code} ${name}`;
            
            // –í—Å—Ç–∞–≤–ª—è–µ–º –¥–∏–∞–≥–Ω–æ–∑ –≤ –ø–æ–ª–µ
            if (currentText.trim()) {
                // –ï—Å–ª–∏ –≤ –ø–æ–ª–µ —É–∂–µ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –¥–∏–∞–≥–Ω–æ–∑ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
                this.currentDiagnosisField.value = currentText + '\n' + newText;
            } else {
                // –ï—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ, –ø—Ä–æ—Å—Ç–æ –≤—Å—Ç–∞–≤–ª—è–µ–º –¥–∏–∞–≥–Ω–æ–∑
                this.currentDiagnosisField.value = newText;
            }
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –∏ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –∫—É—Ä—Å–æ—Ä –≤ –∫–æ–Ω–µ—Ü
            this.currentDiagnosisField.focus();
            this.currentDiagnosisField.setSelectionRange(
                this.currentDiagnosisField.value.length, 
                this.currentDiagnosisField.value.length
            );
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ç–æ—Ä
            this.closeClassifier();
            
            utils.showSuccessMessage(`–î–∏–∞–≥–Ω–æ–∑ –¥–æ–±–∞–≤–ª–µ–Ω: ${code} ${name}`);
            utils.log('–î–∏–∞–≥–Ω–æ–∑ –≤—ã–±—Ä–∞–Ω –∏–∑ –ú–ö–ë-10', 'info', { code, name });
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–∏–∞–≥–Ω–æ–∑–∞:', error);
            utils.showErrorMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –¥–∏–∞–≥–Ω–æ–∑–∞');
        }
    }

    // –ü–æ–∏—Å–∫ –¥–∏–∞–≥–Ω–æ–∑–æ–≤ –ø–æ –∫–æ–¥—É –∏–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏—é
    findDiagnoses(query) {
        if (!query || query.trim() === '') {
            return [];
        }
        
        const searchTerm = query.toLowerCase().trim();
        return this.icdData
            .filter(item => 
                item.code.toLowerCase().includes(searchTerm) || 
                item.name.toLowerCase().includes(searchTerm)
            )
            .slice(0, 50); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∏–∞–≥–Ω–æ–∑–∞ –ø–æ –∫–æ–¥—É
    getDiagnosisByCode(code) {
        return this.icdData.find(item => item.code === code) || null;
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∏–∞–≥–Ω–æ–∑–æ–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã
    getDiagnosesByGroup(groupCode) {
        return this.icdData.filter(item => item.code.startsWith(groupCode));
    }

    // –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –¥–∏–∞–≥–Ω–æ–∑–æ–≤ –¥–ª—è –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è
    getSuggestions(query, limit = 10) {
        if (!query || query.length < 2) {
            return [];
        }
        
        const searchTerm = query.toLowerCase();
        const suggestions = this.icdData
            .filter(item => 
                item.name.toLowerCase().includes(searchTerm) ||
                item.code.toLowerCase().includes(searchTerm)
            )
            .slice(0, limit)
            .map(item => ({
                code: item.code,
                name: item.name,
                display: `${item.code} - ${item.name}`
            }));
            
        return suggestions;
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–¥–∞ –ú–ö–ë-10
    validateCode(code) {
        if (!code) return false;
        
        // –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –ú–ö–ë-10 (–Ω–∞–ø—Ä–∏–º–µ—Ä, A00, I21.0)
        const icdPattern = /^[A-Z]\d{2}(\.\d{1,2})?$/;
        return icdPattern.test(code.toUpperCase());
    }

    // –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –ú–ö–ë-10
    exportData(format = 'json') {
        try {
            switch (format.toLowerCase()) {
                case 'json':
                    const jsonData = {
                        exportDate: new Date().toISOString(),
                        version: '1.0',
                        totalCodes: this.icdData.length,
                        data: this.icdData
                    };
                    utils.downloadFile(
                        JSON.stringify(jsonData, null, 2),
                        `mkb10_export_${Date.now()}.json`,
                        'application/json'
                    );
                    break;
                    
                case 'csv':
                    const csvContent = [
                        '–ö–æ–¥,–ù–∞–∑–≤–∞–Ω–∏–µ',
                        ...this.icdData.map(item => `"${item.code}","${item.name.replace(/"/g, '""')}"`)
                    ].join('\n');
                    utils.downloadFile(
                        csvContent,
                        `mkb10_export_${Date.now()}.csv`,
                        'text/csv'
                    );
                    break;
                    
                default:
                    throw new Error(`–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç: ${format}`);
            }
            
            utils.showSuccessMessage('–î–∞–Ω–Ω—ã–µ –ú–ö–ë-10 —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã');
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –ú–ö–ë-10:', error);
            utils.showErrorMessage('–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –ú–ö–ë-10');
        }
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ú–ö–ë-10
    async loadExternalData(file) {
        try {
            const content = await utils.readFileAsText(file);
            let newData;
            
            if (file.name.endsWith('.json')) {
                const parsed = JSON.parse(content);
                newData = parsed.data || parsed;
            } else if (file.name.endsWith('.csv')) {
                const lines = content.trim().split('\n');
                const headers = lines[0].toLowerCase().split(',');
                
                newData = lines.slice(1).map(line => {
                    const values = line.split(',').map(v => v.replace(/^"|"$/g, ''));
                    return {
                        code: values[0] || '',
                        name: values[1] || ''
                    };
                });
            } else {
                throw new Error('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞');
            }
            
            if (!Array.isArray(newData)) {
                throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö');
            }
            
            // –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            let addedCount = 0;
            newData.forEach(item => {
                if (item.code && item.name && this.validateCode(item.code)) {
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–≥–æ –∫–æ–¥–∞
                    if (!this.icdData.find(existing => existing.code === item.code)) {
                        this.icdData.push({
                            code: item.code.toUpperCase(),
                            name: item.name
                        });
                        addedCount++;
                    }
                }
            });
            
            // –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –∫–æ–¥—É
            this.icdData.sort((a, b) => a.code.localeCompare(b.code));
            this.filteredData = [...this.icdData];
            
            // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
            this.displayICD10Items(this.filteredData);
            
            utils.showSuccessMessage(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${addedCount} –Ω–æ–≤—ã—Ö –¥–∏–∞–≥–Ω–æ–∑–æ–≤ –ú–ö–ë-10`);
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ú–ö–ë-10:', error);
            utils.showErrorMessage('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ –ú–ö–ë-10: ' + error.message);
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    getStatistics() {
        const stats = {
            total: this.icdData.length,
            byChapter: {},
            byBlock: {}
        };
        
        this.icdData.forEach(item => {
            const chapter = item.code.charAt(0);
            const block = item.code.substring(0, 3);
            
            stats.byChapter[chapter] = (stats.byChapter[chapter] || 0) + 1;
            stats.byBlock[block] = (stats.byBlock[block] || 0) + 1;
        });
        
        return stats;
    }

    // –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }

    escapeRegExp(string) {
        return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    debugInfo() {
        return {
            isInitialized: this.isInitialized,
            dataLength: this.icdData.length,
            filteredLength: this.filteredData.length,
            currentField: this.currentDiagnosisField?.id || null,
            isVisible: this.isClassifierVisible()
        };
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
const mkb10Manager = new MKB10Manager();

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.mkb10Manager = mkb10Manager;