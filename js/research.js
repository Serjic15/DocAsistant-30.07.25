/**
 * CardioAssistant Pro - Research Module (–ü–ï–†–ï–†–ê–ë–û–¢–ê–ù–ù–´–ô)
 * –ú–æ–¥—É–ª—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π —Å –ø–æ–¥—Ä–∞–∑–¥–µ–ª–∞–º–∏: –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ + –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ
 */

class ResearchManager {
    constructor() {
        this.researches = [];
        this.storageKey = 'cardio_researches';
        this.templates = {};
        this.isInitialized = false;
        this.currentSection = 'laboratory'; // laboratory | instrumental
    }

    async init() {
        console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π...');
        await this.loadResearches();
        this.loadTemplates();
        console.log('‚úÖ –ú–æ–¥—É–ª—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        this.isInitialized = true;
    }

    async loadResearches() {
        try {
            this.researches = utils.loadFromStorage(this.storageKey, []);
            console.log(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π: ${this.researches.length}`);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π:', error);
            this.researches = [];
        }
    }

    saveResearches() {
        return utils.saveToStorage(this.storageKey, this.researches);
    }

    loadTemplates() {
        this.templates = {
            // –õ–ê–ë–û–†–ê–¢–û–†–ù–´–ï –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø
            laboratory: {
                biochemistry: {
                    name: '–ë–∏–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏',
                    icon: 'fas fa-vial',
                    category: 'laboratory',
                    fields: {
                        glucose: '–ì–ª—é–∫–æ–∑–∞',
                        urea: '–ú–æ—á–µ–≤–∏–Ω–∞',
                        creatinine: '–ö—Ä–µ–∞—Ç–∏–Ω–∏–Ω',
                        totalProtein: '–û–±—â–∏–π –±–µ–ª–æ–∫',
                        albumin: '–ê–ª—å–±—É–º–∏–Ω',
                        alt: '–ê–õ–¢',
                        ast: '–ê–°–¢',
                        totalBilirubin: '–û–±—â–∏–π –±–∏–ª–∏—Ä—É–±–∏–Ω',
                        conclusion: '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ'
                    },
                    normalValues: {
                        glucose: '3.3-5.5 –º–º–æ–ª—å/–ª',
                        urea: '2.5-6.4 –º–º–æ–ª—å/–ª',
                        creatinine: '62-115 –º–∫–º–æ–ª—å/–ª (–º), 53-97 –º–∫–º–æ–ª—å/–ª (–∂)',
                        totalProtein: '64-84 –≥/–ª',
                        albumin: '35-52 –≥/–ª',
                        alt: '<40 –ï–¥/–ª (–º), <32 –ï–¥/–ª (–∂)',
                        ast: '<40 –ï–¥/–ª (–º), <32 –ï–¥/–ª (–∂)',
                        totalBilirubin: '5-21 –º–∫–º–æ–ª—å/–ª'
                    }
                },
                lipidProfile: {
                    name: '–õ–∏–ø–∏–¥–æ–≥—Ä–∞–º–º–∞',
                    icon: 'fas fa-chart-pie',
                    category: 'laboratory',
                    fields: {
                        totalCholesterol: '–û–±—â–∏–π —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω',
                        ldl: '–õ–ù–ü',
                        hdl: '–õ–í–ü',
                        triglycerides: '–¢—Ä–∏–≥–ª–∏—Ü–µ—Ä–∏–¥—ã',
                        atherogenicIndex: '–ò–Ω–¥–µ–∫—Å –∞—Ç–µ—Ä–æ–≥–µ–Ω–Ω–æ—Å—Ç–∏',
                        conclusion: '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ'
                    },
                    normalValues: {
                        totalCholesterol: '<5.2 –º–º–æ–ª—å/–ª',
                        ldl: '<3.0 –º–º–æ–ª—å/–ª',
                        hdl: '>1.0 –º–º–æ–ª—å/–ª (–º), >1.2 –º–º–æ–ª—å/–ª (–∂)',
                        triglycerides: '<1.7 –º–º–æ–ª—å/–ª',
                        atherogenicIndex: '<3.0'
                    }
                },
                coagulation: {
                    name: '–ö–æ–∞–≥—É–ª–æ–≥—Ä–∞–º–º–∞',
                    icon: 'fas fa-tint',
                    category: 'laboratory',
                    fields: {
                        pti: '–ü–¢–ò',
                        inr: '–ú–ù–û',
                        aptt: '–ê–ß–¢–í',
                        fibrinogen: '–§–∏–±—Ä–∏–Ω–æ–≥–µ–Ω',
                        dDimer: 'D-–¥–∏–º–µ—Ä',
                        conclusion: '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ'
                    },
                    normalValues: {
                        pti: '80-120%',
                        inr: '0.9-1.2',
                        aptt: '24-35 —Å–µ–∫',
                        fibrinogen: '2.0-4.0 –≥/–ª',
                        dDimer: '<500 –Ω–≥/–º–ª'
                    }
                },
                cardioMarkers: {
                    name: '–ö–∞—Ä–¥–∏–æ–º–∞—Ä–∫–µ—Ä—ã',
                    icon: 'fas fa-heartbeat',
                    category: 'laboratory',
                    fields: {
                        troponinI: '–¢—Ä–æ–ø–æ–Ω–∏–Ω I',
                        troponinT: '–¢—Ä–æ–ø–æ–Ω–∏–Ω T',
                        ckMb: '–ö–§–ö-–ú–í',
                        bnp: 'BNP',
                        ntProBnp: 'NT-proBNP',
                        conclusion: '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ'
                    },
                    normalValues: {
                        troponinI: '<0.04 –Ω–≥/–º–ª',
                        troponinT: '<0.014 –Ω–≥/–º–ª',
                        ckMb: '<25 –ï–¥/–ª',
                        bnp: '<100 –ø–≥/–º–ª',
                        ntProBnp: '<125 –ø–≥/–º–ª (<75 –ª–µ—Ç)'
                    }
                },
                hormones: {
                    name: '–ì–æ—Ä–º–æ–Ω—ã —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã',
                    icon: 'fas fa-lungs',
                    category: 'laboratory',
                    fields: {
                        tsh: '–¢–¢–ì',
                        t3: '–¢3 —Å–≤–æ–±–æ–¥–Ω—ã–π',
                        t4: '–¢4 —Å–≤–æ–±–æ–¥–Ω—ã–π',
                        conclusion: '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ'
                    },
                    normalValues: {
                        tsh: '0.4-4.0 –º–ï–¥/–ª',
                        t3: '3.1-6.8 –ø–º–æ–ª—å/–ª',
                        t4: '12-22 –ø–º–æ–ª—å/–ª'
                    }
                }
            },
            
            // –ò–ù–°–¢–†–£–ú–ï–ù–¢–ê–õ–¨–ù–´–ï –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø
            instrumental: {
                ecg: {
                    name: '–≠–ö–ì',
                    icon: 'fas fa-heartbeat',
                    category: 'instrumental',
                    fields: {
                        rhythm: '–†–∏—Ç–º',
                        rate: '–ß–°–°',
                        axis: '–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∞—è –æ—Å—å —Å–µ—Ä–¥—Ü–∞',
                        pq: '–ò–Ω—Ç–µ—Ä–≤–∞–ª PQ',
                        qrs: '–ö–æ–º–ø–ª–µ–∫—Å QRS',
                        qt: '–ò–Ω—Ç–µ—Ä–≤–∞–ª QT',
                        stSegment: '–°–µ–≥–º–µ–Ω—Ç ST',
                        tWave: '–ó—É–±–µ—Ü T',
                        conclusion: '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ'
                    },
                    normalValues: {
                        rate: '60-100 —É–¥/–º–∏–Ω',
                        pq: '120-200 –º—Å',
                        qrs: '<120 –º—Å',
                        qt: '–∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ß–°–°'
                    }
                },
                echo: {
                    name: '–≠–•–û-–ö–ì',
                    icon: 'fas fa-wave-square',
                    category: 'instrumental',
                    fields: {
                        aorta: '–ê–æ—Ä—Ç–∞',
                        leftAtrium: '–õ–µ–≤–æ–µ –ø—Ä–µ–¥—Å–µ—Ä–¥–∏–µ',
                        leftVentricle: '–õ–µ–≤—ã–π –∂–µ–ª—É–¥–æ—á–µ–∫',
                        rightVentricle: '–ü—Ä–∞–≤—ã–π –∂–µ–ª—É–¥–æ—á–µ–∫',
                        ejectionFraction: '–§—Ä–∞–∫—Ü–∏—è –≤—ã–±—Ä–æ—Å–∞',
                        mitralValve: '–ú–∏—Ç—Ä–∞–ª—å–Ω—ã–π –∫–ª–∞–ø–∞–Ω',
                        aorticValve: '–ê–æ—Ä—Ç–∞–ª—å–Ω—ã–π –∫–ª–∞–ø–∞–Ω',
                        conclusion: '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ'
                    },
                    normalValues: {
                        ejectionFraction: '‚â•50%',
                        aorta: '<40 –º–º',
                        leftAtrium: '<40 –º–º'
                    }
                },
                holter: {
                    name: '–•–æ–ª—Ç–µ—Ä–æ–≤—Å–∫–æ–µ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –≠–ö–ì',
                    icon: 'fas fa-chart-line',
                    category: 'instrumental',
                    fields: {
                        duration: '–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è',
                        avgHR: '–°—Ä–µ–¥–Ω—è—è –ß–°–°',
                        minHR: '–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ß–°–°',
                        maxHR: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ß–°–°',
                        arrhythmias: '–ù–∞—Ä—É—à–µ–Ω–∏—è —Ä–∏—Ç–º–∞',
                        pauses: '–ü–∞—É–∑—ã',
                        stChanges: '–ò–∑–º–µ–Ω–µ–Ω–∏—è ST',
                        conclusion: '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ'
                    }
                },
                smad: {
                    name: '–°–ú–ê–î',
                    icon: 'fas fa-tachometer-alt',
                    category: 'instrumental',
                    fields: {
                        avgDayBP: '–°—Ä–µ–¥–Ω–µ–µ –ê–î –¥–µ–Ω—å',
                        avgNightBP: '–°—Ä–µ–¥–Ω–µ–µ –ê–î –Ω–æ—á—å',
                        avgTotalBP: '–°—Ä–µ–¥–Ω–µ–µ –ê–î —Å—É—Ç–∫–∏',
                        dipping: '–°—Ç–µ–ø–µ–Ω—å —Å–Ω–∏–∂–µ–Ω–∏—è (%)',
                        loadIndex: '–ò–Ω–¥–µ–∫—Å –Ω–∞–≥—Ä—É–∑–∫–∏',
                        variability: '–í–∞—Ä–∏–∞–±–µ–ª—å–Ω–æ—Å—Ç—å',
                        conclusion: '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ'
                    },
                    normalValues: {
                        avgDayBP: '<135/85 –º–º —Ä—Ç.—Å—Ç.',
                        avgNightBP: '<120/70 –º–º —Ä—Ç.—Å—Ç.',
                        dipping: '10-20%'
                    }
                },
                stress: {
                    name: '–ù–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —Ç–µ—Å—Ç',
                    icon: 'fas fa-running',
                    category: 'instrumental',
                    fields: {
                        testType: '–¢–∏–ø —Ç–µ—Å—Ç–∞',
                        protocol: '–ü—Ä–æ—Ç–æ–∫–æ–ª',
                        maxLoad: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞',
                        maxHR: '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ß–°–°',
                        bpResponse: '–†–µ–∞–∫—Ü–∏—è –ê–î',
                        symptoms: '–°–∏–º–ø—Ç–æ–º—ã',
                        ecgChanges: '–ò–∑–º–µ–Ω–µ–Ω–∏—è –≠–ö–ì',
                        conclusion: '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ'
                    }
                },
                xray: {
                    name: '–†–µ–Ω—Ç–≥–µ–Ω–æ–≥—Ä–∞—Ñ–∏—è –û–ì–ö',
                    icon: 'fas fa-x-ray',
                    category: 'instrumental',
                    fields: {
                        heartSize: '–†–∞–∑–º–µ—Ä—ã —Å–µ—Ä–¥—Ü–∞',
                        lungFields: '–õ–µ–≥–æ—á–Ω—ã–µ –ø–æ–ª—è',
                        costophrenicAngles: '–ö–æ—Å—Ç–Ω–æ-–¥–∏–∞—Ñ—Ä–∞–≥–º–∞–ª—å–Ω—ã–µ —Å–∏–Ω—É—Å—ã',
                        skeleton: '–ö–æ—Å—Ç–Ω–æ-—Å—É—Å—Ç–∞–≤–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞',
                        conclusion: '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ'
                    }
                }
            }
        };
    }

    getResearchInterface() {
        return `
            <div class="research-header">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h3><i class="fas fa-microscope"></i> –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</h3>
                    <div>
                        <button class="btn btn-primary" onclick="researchManager.showCreateModal()">
                            <i class="fas fa-plus"></i> –°–æ–∑–¥–∞—Ç—å –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ
                        </button>
                        <button class="btn btn-secondary" onclick="researchManager.exportResearches()">
                            <i class="fas fa-download"></i> –≠–∫—Å–ø–æ—Ä—Ç
                        </button>
                    </div>
                </div>
                
                <!-- –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–∞–∑–¥–µ–ª–æ–≤ -->
                <div class="research-section-switcher mb-4">
                    <div class="btn-group w-100" role="group">
                        <button type="button" class="btn btn-outline-primary active" 
                                id="laboratory-tab" 
                                onclick="researchManager.switchSection('laboratory')">
                            <i class="fas fa-vial"></i> –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
                        </button>
                        <button type="button" class="btn btn-outline-primary" 
                                id="instrumental-tab"
                                onclick="researchManager.switchSection('instrumental')">
                            <i class="fas fa-stethoscope"></i> –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
                        </button>
                    </div>
                </div>
            </div>

            <!-- –ö–æ–Ω—Ç–µ–Ω—Ç —Ä–∞–∑–¥–µ–ª–æ–≤ -->
            <div id="laboratory-section" class="research-section">
                <div class="research-grid" id="laboratoryGrid">
                    ${this.generateSectionContent('laboratory')}
                </div>
            </div>

            <div id="instrumental-section" class="research-section" style="display: none;">
                <div class="research-grid" id="instrumentalGrid">
                    ${this.generateSectionContent('instrumental')}
                </div>
            </div>

            <!-- –ú–æ–¥–∞–ª —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è -->
            <div class="modal fade" id="createResearchModal" tabindex="-1">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">–ù–æ–≤–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <form id="createResearchForm">
                                <div class="row">
                                    <div class="col-md-6">
                                        <label for="researchCategory" class="form-label">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                                        <select class="form-select" id="researchCategory" onchange="researchManager.onCategoryChange()">
                                            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é...</option>
                                            <option value="laboratory">–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ</option>
                                            <option value="instrumental">–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ</option>
                                        </select>
                                    </div>
                                    <div class="col-md-6">
                                        <label for="researchType" class="form-label">–¢–∏–ø –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</label>
                                        <select class="form-select" id="researchType" onchange="researchManager.onTypeChange()">
                                            <option value="">–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é...</option>
                                        </select>
                                    </div>
                                </div>
                                
                                <div class="row mt-3">
                                    <div class="col-md-6">
                                        <label for="researchDate" class="form-label">–î–∞—Ç–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</label>
                                        <input type="date" class="form-control" id="researchDate" value="${new Date().toISOString().split('T')[0]}">
                                    </div>
                                    <div class="col-md-6">
                                        <label for="researchDoctor" class="form-label">–í—Ä–∞—á</label>
                                        <input type="text" class="form-control" id="researchDoctor" placeholder="–§–ò–û –≤—Ä–∞—á–∞" value="–¢–µ–∫—É—â–∏–π –≤—Ä–∞—á">
                                    </div>
                                </div>
                                
                                <div id="researchFields" class="mt-4">
                                    <!-- –ü–æ–ª—è –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–û—Ç–º–µ–Ω–∞</button>
                            <button type="button" class="btn btn-primary" onclick="researchManager.saveResearch()">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- –ú–æ–¥–∞–ª –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è -->
            <div class="modal fade" id="viewResearchModal" tabindex="-1">
                <div class="modal-dialog modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="viewResearchTitle">–ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body" id="viewResearchBody">
                            <!-- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ -->
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">–ó–∞–∫—Ä—ã—Ç—å</button>
                            <button type="button" class="btn btn-danger" onclick="researchManager.deleteCurrentResearch()">–£–¥–∞–ª–∏—Ç—å</button>
                        </div>
                    </div>
                </div>
            </div>

            <style>
            .research-section-switcher .btn-group .btn {
                flex: 1;
                padding: 12px;
                font-weight: 500;
            }
            
            .research-section-switcher .btn.active {
                background-color: var(--primary-color);
                border-color: var(--primary-color);
                color: white;
            }
            
            .research-grid {
                display: grid;
                grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
                gap: 1.5rem;
                margin-bottom: 2rem;
            }
            
            .research-card {
                background: white;
                border: 1px solid #e9ecef;
                border-radius: 8px;
                padding: 1.5rem;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                transition: all 0.3s ease;
                cursor: pointer;
            }
            
            .research-card:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.15);
                border-color: var(--primary-color);
            }
            
            .research-card-header {
                display: flex;
                align-items: center;
                margin-bottom: 1rem;
            }
            
            .research-card-icon {
                width: 40px;
                height: 40px;
                border-radius: 8px;
                background: var(--primary-color);
                color: white;
                display: flex;
                align-items: center;
                justify-content: center;
                margin-right: 1rem;
                font-size: 1.2rem;
            }
            
            .research-card-title {
                font-weight: 600;
                color: var(--dark-color);
                margin: 0;
                font-size: 1.1rem;
            }
            
            .research-card-body {
                color: #6c757d;
                font-size: 0.9rem;
                line-height: 1.4;
            }
            
            .research-empty {
                text-align: center;
                padding: 3rem;
                color: #6c757d;
            }
            
            .research-empty i {
                font-size: 3rem;
                margin-bottom: 1rem;
                opacity: 0.5;
            }
            </style>
        `;
    }

    generateSectionContent(section) {
        const templates = this.templates[section];
        if (!templates) return '<div class="research-empty"><i class="fas fa-flask"></i><h5>–ù–µ—Ç —à–∞–±–ª–æ–Ω–æ–≤</h5></div>';

        const cards = Object.entries(templates).map(([key, template]) => `
            <div class="research-card" onclick="researchManager.createFromTemplate('${section}', '${key}')">
                <div class="research-card-header">
                    <div class="research-card-icon">
                        <i class="${template.icon}"></i>
                    </div>
                    <h5 class="research-card-title">${template.name}</h5>
                </div>
                <div class="research-card-body">
                    <div class="mb-2">
                        <strong>–ü–æ–ª—è:</strong> ${Object.keys(template.fields).length}
                    </div>
                    ${template.normalValues ? '<small class="text-success">‚úì –ù–æ—Ä–º–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è</small>' : ''}
                </div>
            </div>
        `).join('');

        return cards || '<div class="research-empty"><i class="fas fa-flask"></i><h5>–ù–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π</h5><p>–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ</p></div>';
    }

    switchSection(section) {
        this.currentSection = section;
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        document.getElementById('laboratory-tab').classList.toggle('active', section === 'laboratory');
        document.getElementById('instrumental-tab').classList.toggle('active', section === 'instrumental');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º/—Å–∫—Ä—ã–≤–∞–µ–º —Ä–∞–∑–¥–µ–ª—ã
        document.getElementById('laboratory-section').style.display = section === 'laboratory' ? 'block' : 'none';
        document.getElementById('instrumental-section').style.display = section === 'instrumental' ? 'block' : 'none';
        
        console.log(`üî¨ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ —Ä–∞–∑–¥–µ–ª: ${section}`);
        utils.log('–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π', 'info', { section });
    }

    showCreateModal() {
        const modal = new bootstrap.Modal(document.getElementById('createResearchModal'));
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        document.getElementById('createResearchForm').reset();
        document.getElementById('researchDate').value = new Date().toISOString().split('T')[0];
        document.getElementById('researchDoctor').value = '–¢–µ–∫—É—â–∏–π –≤—Ä–∞—á';
        document.getElementById('researchFields').innerHTML = '';
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é
        document.getElementById('researchCategory').value = this.currentSection;
        this.onCategoryChange();
        
        modal.show();
    }

    createFromTemplate(section, templateKey) {
        this.showCreateModal();
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ —Ç–∏–ø
        document.getElementById('researchCategory').value = section;
        this.onCategoryChange();
        document.getElementById('researchType').value = templateKey;
        this.onTypeChange();
    }

    onCategoryChange() {
        const category = document.getElementById('researchCategory').value;
        const typeSelect = document.getElementById('researchType');
        
        if (!category) {
            typeSelect.innerHTML = '<option value="">–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é...</option>';
            document.getElementById('researchFields').innerHTML = '';
            return;
        }
        
        const templates = this.templates[category];
        typeSelect.innerHTML = '<option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø...</option>' +
            Object.entries(templates).map(([key, template]) => 
                `<option value="${key}">${template.name}</option>`
            ).join('');
    }

    onTypeChange() {
        const category = document.getElementById('researchCategory').value;
        const type = document.getElementById('researchType').value;
        const fieldsContainer = document.getElementById('researchFields');
        
        if (!category || !type) {
            fieldsContainer.innerHTML = '';
            return;
        }
        
        const template = this.templates[category][type];
        if (!template) return;
        
        let fieldsHTML = `<h6 class="mb-3">${template.name} - –ü–æ–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è</h6>`;
        
        Object.entries(template.fields).forEach(([key, label]) => {
            const normalValue = template.normalValues?.[key];
            
            fieldsHTML += `
                <div class="mb-3">
                    <label for="field_${key}" class="form-label">
                        ${label}
                        ${normalValue ? `<span class="text-muted small">(–ù–æ—Ä–º–∞: ${normalValue})</span>` : ''}
                    </label>
                    ${key === 'conclusion' ? 
                        `<textarea class="form-control" id="field_${key}" rows="3" placeholder="–í–≤–µ–¥–∏—Ç–µ ${label.toLowerCase()}..."></textarea>` :
                        `<input type="text" class="form-control" id="field_${key}" placeholder="–í–≤–µ–¥–∏—Ç–µ ${label.toLowerCase()}...">`
                    }
                </div>
            `;
        });
        
        fieldsContainer.innerHTML = fieldsHTML;
    }

    saveResearch() {
        const form = document.getElementById('createResearchForm');
        const category = document.getElementById('researchCategory').value;
        const type = document.getElementById('researchType').value;
        const date = document.getElementById('researchDate').value;
        const doctor = document.getElementById('researchDoctor').value;
        
        if (!category || !type || !date) {
            utils.showErrorMessage('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è');
            return;
        }
        
        const template = this.templates[category][type];
        const data = {};
        
        // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø–æ–ª–µ–π
        Object.keys(template.fields).forEach(key => {
            const field = document.getElementById(`field_${key}`);
            if (field) {
                data[key] = field.value;
            }
        });
        
        const research = {
            id: this.generateResearchId(),
            category: category,
            type: type,
            name: template.name,
            date: date,
            doctor: doctor,
            data: data,
            createdAt: new Date().toISOString(),
            patientId: app.currentPatient?.id || null
        };
        
        this.researches.push(research);
        this.saveResearches();
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
        bootstrap.Modal.getInstance(document.getElementById('createResearchModal')).hide();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        this.refreshInterface();
        
        utils.showSuccessMessage(`–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ "${template.name}" —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ`);
        console.log('üî¨ –ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ:', research);
    }

    viewResearch(researchId) {
        const research = this.researches.find(r => r.id === researchId);
        if (!research) return;
        
        const modal = document.getElementById('viewResearchModal');
        const title = document.getElementById('viewResearchTitle');
        const body = document.getElementById('viewResearchBody');
        
        title.textContent = `${research.name} - ${new Date(research.date).toLocaleDateString('ru-RU')}`;
        
        const template = this.templates[research.category][research.type];
        
        let bodyHTML = `
            <div class="row mb-3">
                <div class="col-md-6"><strong>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</strong> ${research.category === 'laboratory' ? '–õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ' : '–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–ª—å–Ω—ã–µ'}</div>
                <div class="col-md-6"><strong>–î–∞—Ç–∞:</strong> ${new Date(research.date).toLocaleDateString('ru-RU')}</div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6"><strong>–í—Ä–∞—á:</strong> ${research.doctor}</div>
                <div class="col-md-6"><strong>–°–æ–∑–¥–∞–Ω–æ:</strong> ${new Date(research.createdAt).toLocaleDateString('ru-RU')}</div>
            </div>
            <hr>
            <h6>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:</h6>
        `;
        
        Object.entries(template.fields).forEach(([key, label]) => {
            const value = research.data[key] || '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
            const normalValue = template.normalValues?.[key];
            
            bodyHTML += `
                <div class="mb-2">
                    <strong>${label}:</strong> ${value}
                    ${normalValue ? `<small class="text-muted ms-2">(–ù–æ—Ä–º–∞: ${normalValue})</small>` : ''}
                </div>
            `;
        });
        
        body.innerHTML = bodyHTML;
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –¥–ª—è –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
        modal.setAttribute('data-research-id', researchId);
        
        const modalInstance = new bootstrap.Modal(modal);
        modalInstance.show();
    }

    deleteCurrentResearch() {
        const modal = document.getElementById('viewResearchModal');
        const researchId = modal.getAttribute('data-research-id');
        
        if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ?')) {
            const index = this.researches.findIndex(r => r.id === researchId);
            if (index >= 0) {
                this.researches.splice(index, 1);
                this.saveResearches();
                
                // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª
                bootstrap.Modal.getInstance(modal).hide();
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                this.refreshInterface();
                
                utils.showSuccessMessage('–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');
            }
        }
    }

    refreshInterface() {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —Ä–∞–∑–¥–µ–ª
        const grid = document.getElementById(this.currentSection + 'Grid');
        if (grid) {
            const sectionResearches = this.researches.filter(r => r.category === this.currentSection);
            
            if (sectionResearches.length === 0) {
                grid.innerHTML = this.generateSectionContent(this.currentSection);
            } else {
                // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
                const savedCards = sectionResearches.map(research => `
                    <div class="research-card" onclick="researchManager.viewResearch('${research.id}')">
                        <div class="research-card-header">
                            <div class="research-card-icon">
                                <i class="fas fa-file-medical"></i>
                            </div>
                            <div>
                                <h5 class="research-card-title">${research.name}</h5>
                                <small class="text-muted">${new Date(research.date).toLocaleDateString('ru-RU')}</small>
                            </div>
                        </div>
                        <div class="research-card-body">
                            <div class="mb-1"><strong>–í—Ä–∞—á:</strong> ${research.doctor}</div>
                            ${research.data.conclusion ? 
                                `<div class="mt-2"><small>${research.data.conclusion.substring(0, 80)}${research.data.conclusion.length > 80 ? '...' : ''}</small></div>` : 
                                ''
                            }
                        </div>
                    </div>
                `).join('');
                
                grid.innerHTML = this.generateSectionContent(this.currentSection) + savedCards;
            }
        }
    }

    onTabActivate() {
        if (!this.isInitialized) {
            this.init();
        }
        this.refreshInterface();
    }

    generateResearchId() {
        return Date.now().toString(36) + Math.random().toString(36).substr(2);
    }

    // –≠–∫—Å–ø–æ—Ä—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π
    exportResearches() {
        if (this.researches.length === 0) {
            utils.showWarningMessage('–ù–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞');
            return;
        }
        
        const exportData = {
            exportDate: new Date().toISOString(),
            version: '2.0',
            patientId: app.currentPatient?.id || null,
            researches: this.researches
        };
        
        const jsonString = JSON.stringify(exportData, null, 2);
        utils.downloadFile(
            jsonString, 
            `researches_export_${Date.now()}.json`, 
            'application/json'
        );
        
        utils.showSuccessMessage('–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã');
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –ø–∞—Ü–∏–µ–Ω—Ç–∞
    getPatientResearches(patientId) {
        return this.researches.filter(r => r.patientId === patientId);
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    getStatistics() {
        const stats = {
            total: this.researches.length,
            byCategory: {
                laboratory: this.researches.filter(r => r.category === 'laboratory').length,
                instrumental: this.researches.filter(r => r.category === 'instrumental').length
            },
            byType: {}
        };
        
        this.researches.forEach(research => {
            stats.byType[research.type] = (stats.byType[research.type] || 0) + 1;
        });
        
        return stats;
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
const researchManager = new ResearchManager();

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.researchManager = researchManager;