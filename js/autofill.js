/**
 * CardioAssistant Pro - Autofill Module (–ò–°–ü–†–ê–í–õ–ï–ù - –ë–ê–ì –° –ò–°–ß–ï–ó–ù–û–í–ï–ù–ò–ï–ú)
 * –ú–æ–¥—É–ª—å –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ–∫ - —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ–º
 */

class AutofillManager {
    constructor() {
        this.autofillData = {};
        this.currentField = null;
        this.currentAutofillData = [];
        this.hideTimeout = null;
        this.isInitialized = false;
        this.isMouseOverPanel = false;
        this.isPanelPinned = false;
        this.activeFieldType = null;
        this.focusedElement = null;
    }

    init() {
        console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ–∫...');
        this.loadAutofillData();
        this.setupEventListeners();
        console.log('‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        this.isInitialized = true;
    }

    loadAutofillData() {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ
        if (typeof window.autofillData !== 'undefined') {
            this.autofillData = window.autofillData;
            console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ autofill-data.js');
        } else {
            console.warn('‚ö†Ô∏è –§–∞–π–ª autofill-data.js –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
            this.loadBuiltinData();
        }
    }

    loadBuiltinData() {
        this.autofillData = {
            complaints: [
                "–ë–æ–ª–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ —Å–µ—Ä–¥—Ü–∞ –¥–∞–≤—è—â–µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–µ –ø—Ä–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ",
                "–ë–æ–ª–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ —Å–µ—Ä–¥—Ü–∞ –∫–æ–ª—é—â–µ–≥–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞ –≤ –ø–æ–∫–æ–µ",
                "–û–¥—ã—à–∫–∞ –ø—Ä–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ (–ø–æ–¥—ä–µ–º –Ω–∞ 2-3 —ç—Ç–∞–∂)",
                "–û–¥—ã—à–∫–∞ –≤ –ø–æ–∫–æ–µ",
                "–£—á–∞—â–µ–Ω–Ω–æ–µ —Å–µ—Ä–¥—Ü–µ–±–∏–µ–Ω–∏–µ",
                "–ü–µ—Ä–µ–±–æ–∏ –≤ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–¥—Ü–∞",
                "–ì–æ–ª–æ–≤–Ω—ã–µ –±–æ–ª–∏",
                "–ì–æ–ª–æ–≤–æ–∫—Ä—É–∂–µ–Ω–∏–µ",
                "–û—Ç–µ–∫–∏ –Ω–∏–∂–Ω–∏—Ö –∫–æ–Ω–µ—á–Ω–æ—Å—Ç–µ–π",
                "–ü–æ–≤—ã—à–µ–Ω–∏–µ –∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è",
                "–°–Ω–∏–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–Ω–æ—Å–∏–º–æ—Å—Ç–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –Ω–∞–≥—Ä—É–∑–æ–∫",
                "–û–±—â–∞—è —Å–ª–∞–±–æ—Å—Ç—å, –ø–æ–≤—ã—à–µ–Ω–Ω–∞—è —É—Ç–æ–º–ª—è–µ–º–æ—Å—Ç—å"
            ],
            "anamnesis-disease": [
                "–ó–∞–±–æ–ª–µ–≤–∞–Ω–∏–µ —Ä–∞–∑–≤–∏–ª–æ—Å—å –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö",
                "–û—Å—Ç—Ä–æ–µ –Ω–∞—á–∞–ª–æ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è",
                "–°—á–∏—Ç–∞–µ—Ç —Å–µ–±—è –±–æ–ª—å–Ω—ã–º —Å",
                "–í–ø–µ—Ä–≤—ã–µ —Å–∏–º–ø—Ç–æ–º—ã –ø–æ—è–≤–∏–ª–∏—Å—å",
                "–£—Ö—É–¥—à–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ—Ç–º–µ—á–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ",
                "–°–≤—è–∑—ã–≤–∞–µ—Ç –Ω–∞—á–∞–ª–æ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è —Å —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–æ–π",
                "–°–≤—è–∑—ã–≤–∞–µ—Ç –Ω–∞—á–∞–ª–æ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º",
                "–û–±—Ä–∞—â–∞–ª—Å—è –∫ –≤—Ä–∞—á—É –ø–æ –ø–æ–≤–æ–¥—É –¥–∞–Ω–Ω–æ–≥–æ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è",
                "–ì–æ—Å–ø–∏—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ –ø–æ–≤–æ–¥—É",
                "–ü—Ä–∏–Ω–∏–º–∞–ª –ª–µ—á–µ–Ω–∏–µ:",
                "–≠—Ñ—Ñ–µ–∫—Ç –æ—Ç –ø—Ä–æ–≤–æ–¥–∏–º–æ–≥–æ –ª–µ—á–µ–Ω–∏—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π",
                "–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–æ—Å—Ç—Ä–µ–Ω–∏–µ –æ—Ç–º–µ—á–∞–µ—Ç"
            ],
            "exam-plan": [
                "–≠–ö–ì –ø–æ–∫–æ—è –≤ 12 –æ—Ç–≤–µ–¥–µ–Ω–∏—è—Ö",
                "–≠–•–û-–ö–ì (—Ç—Ä–∞–Ω—Å—Ç–æ—Ä–∞–∫–∞–ª—å–Ω–∞—è —ç—Ö–æ–∫–∞—Ä–¥–∏–æ–≥—Ä–∞—Ñ–∏—è)",
                "–•–æ–ª—Ç–µ—Ä–æ–≤—Å–∫–æ–µ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –≠–ö–ì 24 —á–∞—Å–∞",
                "–°–ú–ê–î (—Å—É—Ç–æ—á–Ω–æ–µ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–≥–æ –¥–∞–≤–ª–µ–Ω–∏—è)",
                "–ù–∞–≥—Ä—É–∑–æ—á–Ω–∞—è –ø—Ä–æ–±–∞ (—Ç—Ä–µ–¥–º–∏–ª-—Ç–µ—Å—Ç/–≤–µ–ª–æ—ç—Ä–≥–æ–º–µ—Ç—Ä–∏—è)",
                "–†–µ–Ω—Ç–≥–µ–Ω–æ–≥—Ä–∞—Ñ–∏—è –æ—Ä–≥–∞–Ω–æ–≤ –≥—Ä—É–¥–Ω–æ–π –∫–ª–µ—Ç–∫–∏",
                "–û–ê–ö (–æ–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏)",
                "–ë–∏–æ—Ö–∏–º–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏ (–≥–ª—é–∫–æ–∑–∞, –º–æ—á–µ–≤–∏–Ω–∞, –∫—Ä–µ–∞—Ç–∏–Ω–∏–Ω)",
                "–õ–∏–ø–∏–¥–Ω—ã–π —Å–ø–µ–∫—Ç—Ä (–æ–±—â–∏–π –•–°, –õ–ù–ü, –õ–í–ü, –¢–ì)",
                "–ö–æ–∞–≥—É–ª–æ–≥—Ä–∞–º–º–∞ (–ü–¢–ò, –ú–ù–û, –ê–ß–¢–í, —Ñ–∏–±—Ä–∏–Ω–æ–≥–µ–Ω)",
                "–ì–æ—Ä–º–æ–Ω—ã —â–∏—Ç–æ–≤–∏–¥–Ω–æ–π –∂–µ–ª–µ–∑—ã (–¢–¢–ì, –¢3, –¢4)",
                "–ú–∞—Ä–∫–µ—Ä—ã –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è –º–∏–æ–∫–∞—Ä–¥–∞ (—Ç—Ä–æ–ø–æ–Ω–∏–Ω I, –ö–§–ö-–ú–í)",
                "–û–ê–ú (–æ–±—â–∏–π –∞–Ω–∞–ª–∏–∑ –º–æ—á–∏)"
            ],
            medications: [
                "–ê—Å–ø–∏—Ä–∏–Ω 100 –º–≥ 1 —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ —É—Ç—Ä–æ–º –ø–æ—Å–ª–µ –µ–¥—ã –¥–ª–∏—Ç–µ–ª—å–Ω–æ",
                "–ö–ª–æ–ø–∏–¥–æ–≥—Ä–µ–ª 75 –º–≥ 1 —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ —É—Ç—Ä–æ–º",
                "–ê—Ç–æ—Ä–≤–∞—Å—Ç–∞—Ç–∏–Ω 20 –º–≥ 1 —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ –≤–µ—á–µ—Ä–æ–º",
                "–†–æ–∑—É–≤–∞—Å—Ç–∞—Ç–∏–Ω 10 –º–≥ 1 —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ –≤–µ—á–µ—Ä–æ–º",
                "–ë–∏—Å–æ–ø—Ä–æ–ª–æ–ª 2,5 –º–≥ 1 —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ —É—Ç—Ä–æ–º",
                "–ú–µ—Ç–æ–ø—Ä–æ–ª–æ–ª 50 –º–≥ 2 —Ä–∞–∑–∞ –≤ —Å—É—Ç–∫–∏",
                "–≠–Ω–∞–ª–∞–ø—Ä–∏–ª 10 –º–≥ 2 —Ä–∞–∑–∞ –≤ —Å—É—Ç–∫–∏",
                "–õ–∏–∑–∏–Ω–æ–ø—Ä–∏–ª 10 –º–≥ 1 —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ —É—Ç—Ä–æ–º",
                "–ê–º–ª–æ–¥–∏–ø–∏–Ω 5 –º–≥ 1 —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ —É—Ç—Ä–æ–º",
                "–ò–Ω–¥–∞–ø–∞–º–∏–¥ 2,5 –º–≥ 1 —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ —É—Ç—Ä–æ–º"
            ],
            regime: [
                "–†–µ–∂–∏–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π",
                "–î–æ–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏",
                "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ç—è–∂–µ–ª—ã—Ö —Ñ–∏–∑–∏—á–µ—Å–∫–∏—Ö –Ω–∞–≥—Ä—É–∑–æ–∫",
                "–•–æ–¥—å–±–∞ –≤ –º–µ–¥–ª–µ–Ω–Ω–æ–º —Ç–µ–º–ø–µ 30-40 –º–∏–Ω—É—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ",
                "–ö–æ–Ω—Ç—Ä–æ–ª—å –ê–î –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —É—Ç—Ä–æ–º –∏ –≤–µ—á–µ—Ä–æ–º",
                "–ö–æ–Ω—Ç—Ä–æ–ª—å –ß–°–° –µ–∂–µ–¥–Ω–µ–≤–Ω–æ",
                "–î–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π —Å–æ–Ω –Ω–µ –º–µ–Ω–µ–µ 8 —á–∞—Å–æ–≤",
                "–ò–∑–±–µ–≥–∞—Ç—å —Å—Ç—Ä–µ—Å—Å–æ–≤—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π",
                "–û—Ç–∫–∞–∑ –æ—Ç –∫—É—Ä–µ–Ω–∏—è",
                "–†–µ–≥—É–ª—è—Ä–Ω—ã–π –ø—Ä–∏–µ–º –Ω–∞–∑–Ω–∞—á–µ–Ω–Ω—ã—Ö –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤"
            ],
            diet: [
                "–î–∏–µ—Ç–∞ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º —Å–æ–ª–∏ –¥–æ 3-5 –≥/—Å—É—Ç",
                "–°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–º–æ—Ä—Å–∫–∞—è –¥–∏–µ—Ç–∞",
                "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω—ã—Ö –∂–∏—Ä–æ–≤",
                "–£–≤–µ–ª–∏—á–µ–Ω–∏–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –æ–≤–æ—â–µ–π –∏ —Ñ—Ä—É–∫—Ç–æ–≤",
                "–î—Ä–æ–±–Ω–æ–µ –ø–∏—Ç–∞–Ω–∏–µ 4-5 —Ä–∞–∑ –≤ –¥–µ–Ω—å",
                "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∂–∏–¥–∫–æ—Å—Ç–∏ –¥–æ 1,5 –ª/—Å—É—Ç –ø—Ä–∏ –æ—Ç–µ–∫–∞—Ö",
                "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ö–æ–ª–µ—Å—Ç–µ—Ä–∏–Ω–∞ –≤ –ø–∏—â–µ",
                "–í–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ä–∞—Ü–∏–æ–Ω —Ä—ã–±—ã –∂–∏—Ä–Ω—ã—Ö —Å–æ—Ä—Ç–æ–≤ 2-3 —Ä–∞–∑–∞ –≤ –Ω–µ–¥–µ–ª—é",
                "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –∫–æ—Ñ–µ–∏–Ω–∞",
                "–ö–æ–Ω—Ç—Ä–æ–ª—å –∫–∞–ª–æ—Ä–∏–π–Ω–æ—Å—Ç–∏ —Ä–∞—Ü–∏–æ–Ω–∞"
            ]
        };
    }

    setupEventListeners() {
        const panel = document.getElementById('autofillPanel');
        if (panel) {
            // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ë–æ–ª–µ–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º—ã—à–∏
            panel.addEventListener('mouseenter', (e) => {
                e.stopPropagation();
                this.isMouseOverPanel = true;
                this.cancelHideTimeout();
                console.log('üê≠ –ú—ã—à—å –Ω–∞–¥ –ø–∞–Ω–µ–ª—å—é –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ–∫');
            });

            panel.addEventListener('mouseleave', (e) => {
                e.stopPropagation();
                this.isMouseOverPanel = false;
                
                // –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —É—Ö–æ–¥–µ –º—ã—à–∏
                // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–∞–Ω–µ–ª—å –Ω–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞ –ò –Ω–µ—Ç —Ñ–æ–∫—É—Å–∞ –Ω–∞ –ø–æ–ª–µ
                if (!this.isPanelPinned && !this.focusedElement) {
                    this.hidePanelDelayed(2000); // –£–≤–µ–ª–∏—á–µ–Ω–∞ –∑–∞–¥–µ—Ä–∂–∫–∞
                }
                console.log('üê≠ –ú—ã—à—å –ø–æ–∫–∏–Ω—É–ª–∞ –ø–∞–Ω–µ–ª—å –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ–∫');
            });

            // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏–π –≤–Ω—É—Ç—Ä–∏ –ø–∞–Ω–µ–ª–∏
            panel.addEventListener('click', (e) => {
                e.stopPropagation();
            });

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏
            this.addPinButton();
        }

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∞–≤–∏—à
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && this.isPanelVisible()) {
                this.closePanel();
            }
            // –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ/–æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –ø–æ Ctrl+Space
            if (e.ctrlKey && e.code === 'Space' && this.isPanelVisible()) {
                e.preventDefault();
                this.togglePinPanel();
            }
        });

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±–∏—Ä–∞–µ–º –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ
        document.addEventListener('click', (e) => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–∫ –ù–ï –ø–æ –ø–æ–ª—é —Å –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–æ–π –∏ –ù–ï –ø–æ –ø–∞–Ω–µ–ª–∏
            const isAutofillField = e.target.matches('textarea[onfocus*="showPanel"], input[onfocus*="showPanel"]') ||
                                   e.target.closest('textarea[onfocus*="showPanel"], input[onfocus*="showPanel"]');
            
            const isAutofillPanel = e.target.closest('.autofill-panel');
            
            if (!isAutofillField && !isAutofillPanel && this.isPanelVisible() && !this.isPanelPinned) {
                // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º, —á—Ç–æ–±—ã –¥–∞—Ç—å –≤—Ä–µ–º—è –Ω–∞ –∫–ª–∏–∫ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É
                setTimeout(() => {
                    if (!this.isMouseOverPanel && !this.focusedElement) {
                        this.closePanel();
                    }
                }, 200);
            }
        });
    }

    addPinButton() {
        const header = document.querySelector('.autofill-header');
        if (header && !header.querySelector('.autofill-pin')) {
            const pinButton = document.createElement('span');
            pinButton.className = 'autofill-pin';
            pinButton.innerHTML = 'üìå';
            pinButton.title = '–ó–∞–∫—Ä–µ–ø–∏—Ç—å –ø–∞–Ω–µ–ª—å (Ctrl+Space)';
            pinButton.style.cursor = 'pointer';
            pinButton.style.marginRight = '10px';
            pinButton.onclick = (e) => {
                e.stopPropagation();
                this.togglePinPanel();
            };
            
            const closeButton = header.querySelector('.autofill-close');
            header.insertBefore(pinButton, closeButton);
        }
    }

    togglePinPanel() {
        this.isPanelPinned = !this.isPanelPinned;
        const pinButton = document.querySelector('.autofill-pin');
        
        if (pinButton) {
            pinButton.innerHTML = this.isPanelPinned ? 'üìç' : 'üìå';
            pinButton.title = this.isPanelPinned ? 
                '–û—Ç–∫—Ä–µ–ø–∏—Ç—å –ø–∞–Ω–µ–ª—å (Ctrl+Space)' : '–ó–∞–∫—Ä–µ–ø–∏—Ç—å –ø–∞–Ω–µ–ª—å (Ctrl+Space)';
        }
        
        const panel = document.getElementById('autofillPanel');
        if (panel) {
            panel.classList.toggle('pinned', this.isPanelPinned);
        }
        
        console.log(`üìå –ü–∞–Ω–µ–ª—å ${this.isPanelPinned ? '–∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞' : '–æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∞'}`);
        utils.showNotification(
            `–ü–∞–Ω–µ–ª—å –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ–∫ ${this.isPanelPinned ? '–∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞' : '–æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–∞'}`, 
            'info'
        );
    }

    // –ò–°–ü–†–ê–í–õ–ï–ù –û–°–ù–û–í–ù–û–ô –ú–ï–¢–û–î –ü–û–ö–ê–ó–ê –ü–ê–ù–ï–õ–ò
    showPanel(fieldType) {
        if (!this.isInitialized) {
            this.init();
        }

        // –û—Ç–º–µ–Ω—è–µ–º –ª—é–±—ã–µ —Ç–∞–π–º–µ—Ä—ã —Å–∫—Ä—ã—Ç–∏—è
        this.cancelHideTimeout();

        const panel = document.getElementById('autofillPanel');
        const title = document.getElementById('autofillTitle');
        const searchInput = document.getElementById('autofillSearch');
        
        if (!panel || !title || !searchInput) {
            console.error('‚ùå –≠–ª–µ–º–µ–Ω—Ç—ã –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return;
        }

        // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ –ø–æ–ª–µ
        this.currentField = fieldType;
        this.activeFieldType = fieldType;
        this.focusedElement = document.activeElement;
        
        const data = this.autofillData[fieldType] || [];
        this.currentAutofillData = [...data];
        
        title.textContent = `–ê–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ - ${this.getFieldTitle(fieldType)}`;
        
        // –û—á–∏—â–∞–µ–º –ø–æ–∏—Å–∫
        searchInput.value = '';
        
        this.displayAutofillItems(this.currentAutofillData);
        
        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –°—Ç–∞–±–∏–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏
        panel.classList.add('active');
        
        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–∏—Å–∫ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
        setTimeout(() => {
            if (searchInput && this.isPanelVisible()) {
                searchInput.focus();
            }
        }, 150);
        
        console.log(`‚úÖ –ü–∞–Ω–µ–ª—å –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ–∫ –æ—Ç–∫—Ä—ã—Ç–∞ –¥–ª—è –ø–æ–ª—è: ${fieldType}`);
        utils.log('–ü–∞–Ω–µ–ª—å –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ–∫ –æ—Ç–∫—Ä—ã—Ç–∞', 'info', { 
            fieldType, 
            itemsCount: data.length 
        });
    }

    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ú–µ—Ç–æ–¥ —Å–∫—Ä—ã—Ç–∏—è —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
    hidePanelDelayed(delay = 1000) {
        // –ù–ï —Å–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –µ—Å–ª–∏:
        // 1. –ü–∞–Ω–µ–ª—å –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞
        // 2. –ú—ã—à—å –Ω–∞–¥ –ø–∞–Ω–µ–ª—å—é  
        // 3. –ï—Å—Ç—å —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ —Å –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–æ–π
        if (this.isPanelPinned || this.isMouseOverPanel) {
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –ù–ï –ø–æ–ª–µ —Å –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–æ–π
        const activeElement = document.activeElement;
        const isAutofillField = activeElement && (
            activeElement.getAttribute('onfocus') && activeElement.getAttribute('onfocus').includes('showPanel')
        );
        
        if (isAutofillField) {
            return; // –ù–ï –∑–∞–∫—Ä—ã–≤–∞–µ–º –µ—Å–ª–∏ —Ñ–æ–∫—É—Å –Ω–∞ –ø–æ–ª–µ –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏
        }
        
        this.cancelHideTimeout();
        
        this.hideTimeout = setTimeout(() => {
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º
            if (!this.isMouseOverPanel && !this.isPanelPinned) {
                const currentActiveElement = document.activeElement;
                const isStillFocused = currentActiveElement && (
                    currentActiveElement.getAttribute('onfocus') && 
                    currentActiveElement.getAttribute('onfocus').includes('showPanel')
                );
                
                if (!isStillFocused) {
                    this.closePanel();
                }
            }
        }, delay);
        
        console.log(`‚è∞ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏ —á–µ—Ä–µ–∑ ${delay}–º—Å`);
    }

    cancelHideTimeout() {
        if (this.hideTimeout) {
            clearTimeout(this.hideTimeout);
            this.hideTimeout = null;
            console.log('‚è∞ –û—Ç–º–µ–Ω–µ–Ω —Ç–∞–π–º–µ—Ä —Å–∫—Ä—ã—Ç–∏—è –ø–∞–Ω–µ–ª–∏');
        }
    }

    closePanel() {
        const panel = document.getElementById('autofillPanel');
        if (panel) {
            panel.classList.remove('active');
        }
        
        this.cancelHideTimeout();
        this.currentField = null;
        this.activeFieldType = null;
        this.currentAutofillData = [];
        this.isMouseOverPanel = false;
        this.focusedElement = null;
        
        // –ù–ï —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏
        
        console.log('‚úÖ –ü–∞–Ω–µ–ª—å –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ–∫ –∑–∞–∫—Ä—ã—Ç–∞');
        utils.log('–ü–∞–Ω–µ–ª—å –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–æ–∫ –∑–∞–∫—Ä—ã—Ç–∞', 'info');
    }

    isPanelVisible() {
        const panel = document.getElementById('autofillPanel');
        return panel && panel.classList.contains('active');
    }

    filterItems() {
        const searchInput = document.getElementById('autofillSearch');
        if (!searchInput) return;

        const searchTerm = searchInput.value.toLowerCase().trim();
        
        if (searchTerm.length === 0) {
            this.displayAutofillItems(this.currentAutofillData);
            return;
        }
        
        const filtered = this.currentAutofillData.filter(item => 
            item.toLowerCase().includes(searchTerm)
        );
        
        this.displayAutofillItems(filtered);
        console.log(`üîç –ü–æ–∏—Å–∫ "${searchTerm}": –Ω–∞–π–¥–µ–Ω–æ ${filtered.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
    }
    
    displayAutofillItems(items) {
        const container = document.getElementById('autofillItems');
        if (!container) return;
        
        if (items.length === 0) {
            container.innerHTML = `
                <div class="text-center text-muted p-3">
                    <i class="fas fa-search fa-2x mb-2"></i>
                    <div>–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>
                    <small>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å</small>
                </div>
            `;
            return;
        }
        
        container.innerHTML = items.map((item, index) => 
            `<div class="autofill-item" 
                  data-index="${index}" 
                  onclick="autofillManager.insertAutofill(this.getAttribute('data-text'))"
                  data-text="${this.escapeHtml(item)}">
                ${this.highlightSearchTerm(item)}
             </div>`
        ).join('');
        
        console.log(`üìù –û—Ç–æ–±—Ä–∞–∂–µ–Ω–æ ${items.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏`);
    }

    highlightSearchTerm(text) {
        const searchInput = document.getElementById('autofillSearch');
        if (!searchInput || !searchInput.value) return this.escapeHtml(text);
        
        const searchTerm = this.escapeHtml(searchInput.value.trim());
        if (!searchTerm) return this.escapeHtml(text);
        
        const escapedText = this.escapeHtml(text);
        const regex = new RegExp(`(${this.escapeRegExp(searchTerm)})`, 'gi');
        
        return escapedText.replace(regex, '<mark>$1</mark>');
    }

    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ú–µ—Ç–æ–¥ –≤—Å—Ç–∞–≤–∫–∏ –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏
    insertAutofill(text) {
        if (!this.currentField) {
            utils.showErrorMessage('–û—à–∏–±–∫–∞: –Ω–µ –≤—ã–±—Ä–∞–Ω–æ –ø–æ–ª–µ –¥–ª—è –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏');
            return;
        }

        try {
            // –ù–∞—Ö–æ–¥–∏–º –∞–∫—Ç–∏–≤–Ω–æ–µ –ø–æ–ª–µ –±–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–æ
            let field = null;
            
            // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —á–µ—Ä–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
            if (this.focusedElement && this.focusedElement.getAttribute('onfocus') && 
                this.focusedElement.getAttribute('onfocus').includes('showPanel')) {
                field = this.focusedElement;
            }
            
            // –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –∏—â–µ–º –ø–æ ID
            if (!field) {
                const fieldMap = {
                    'complaints': 'complaints',
                    'anamnesis-disease': 'anamnesisDisease',
                    'exam-plan': 'examPlan',
                    'medications': 'medications',
                    'regime': 'regime',
                    'diet': 'diet'
                };
                
                const fieldId = fieldMap[this.currentField];
                field = document.getElementById(fieldId);
            }
            
            if (!field) {
                console.error(`‚ùå –ü–æ–ª–µ –¥–ª—è –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ`);
                utils.showErrorMessage('–û—à–∏–±–∫–∞: –ø–æ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
                return;
            }

            const currentText = field.value || '';
            let newText;
            
            // –£–º–Ω–∞—è –≤—Å—Ç–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞
            if (currentText.trim()) {
                if (!currentText.endsWith('\n') && !currentText.endsWith('. ')) {
                    newText = currentText + '\n' + text;
                } else {
                    newText = currentText + text;
                }
            } else {
                newText = text;
            }
            
            field.value = newText;
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–æ–∫—É—Å –∏ –∫—É—Ä—Å–æ—Ä –≤ –∫–æ–Ω–µ—Ü
            field.focus();
            field.setSelectionRange(field.value.length, field.value.length);
            
            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
            this.focusedElement = field;
            
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞
            if (!this.isPanelPinned) {
                this.closePanel();
            }
            
            utils.showSuccessMessage('–¢–µ–∫—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω');
            utils.log('–ê–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å—Ç–∞–≤–ª–µ–Ω–∞', 'info', { 
                field: field.id, 
                textLength: text.length 
            });
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –∞–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏:', error);
            utils.showErrorMessage('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ —Ç–µ–∫—Å—Ç–∞');
        }
    }

    getFieldTitle(fieldType) {
        const titles = {
            'complaints': '–ñ–∞–ª–æ–±—ã',
            'anamnesis-disease': '–ê–Ω–∞–º–Ω–µ–∑ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è',
            'exam-plan': '–ü–ª–∞–Ω –æ–±—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è',
            'medications': '–ú–µ–¥–∏–∫–∞–º–µ–Ω—Ç–æ–∑–Ω–∞—è —Ç–µ—Ä–∞–ø–∏—è',
            'regime': '–†–µ–∂–∏–º',
            'diet': '–î–∏–µ—Ç–∞'
        };
        return titles[fieldType] || '–ê–≤—Ç–æ–ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∞';
    }

    // –ù–û–í–´–ï –ú–ï–¢–û–î–´ –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ–∫—É—Å–∞ –ø–æ–ª—è (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ HTML)
    onFieldFocus(fieldType, element) {
        this.focusedElement = element;
        this.showPanel(fieldType);
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Ç–µ—Ä–∏ —Ñ–æ–∫—É—Å–∞ –ø–æ–ª—è (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ HTML)
    onFieldBlur(element) {
        // –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º –∑–∞–∫—Ä—ã—Ç–∏–µ–º
        setTimeout(() => {
            if (this.focusedElement === element) {
                this.focusedElement = null;
            }
            // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–∞ –∏ –º—ã—à—å –Ω–µ –Ω–∞–¥ –ø–∞–Ω–µ–ª—å—é
            if (!this.isPanelPinned && !this.isMouseOverPanel) {
                this.hidePanelDelayed(1500);
            }
        }, 100);
    }

    // –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    escapeHtml(text) {
        const div = document.createElement('div');
        div.textContent = text;
        return div.innerHTML;
    }

    escapeRegExp(string) {
        return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&');
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    debugInfo() {
        return {
            isInitialized: this.isInitialized,
            currentField: this.currentField,
            activeFieldType: this.activeFieldType,
            isVisible: this.isPanelVisible(),
            isMouseOver: this.isMouseOverPanel,
            isPinned: this.isPanelPinned,
            hasTimeout: !!this.hideTimeout,
            focusedElement: this.focusedElement?.id || null,
            dataKeys: Object.keys(this.autofillData),
            currentDataLength: this.currentAutofillData.length
        };
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
const autofillManager = new AutofillManager();

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.autofillManager = autofillManager;